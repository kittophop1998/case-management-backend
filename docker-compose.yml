services:
  # wait-for-postgres:
  #   image: wait4x/wait4x
  #   command: tcp postgres:5432 --timeout 30s --strict -- echo "Postgres is ready"
  #   depends_on:
  #     - postgres
  #     - redis
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - wait-for-postgres
  #   restart: on-failure

  postgres:
    image: postgres:latest
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9010:9010" # MinIO API
      - "9001:9001" # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

  # n8n:
  #   image: n8nio/n8n
  #   container_name: n8n
  #   ports:
  #     - "5678:5678"
  #   environment:
  #     - N8N_BASIC_AUTH_ACTIVE=true
  #     - N8N_BASIC_AUTH_USER=admin
  #     - N8N_BASIC_AUTH_PASSWORD=strongpassword
  #     - N8N_HOST=n8n.local
  #     - N8N_PORT=5678
  #     - TZ=Asia/Bangkok
  #   volumes:
  #     - n8n_data:/home/node/.n8n
  #   restart: always

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  minio_data:
